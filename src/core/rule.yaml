rules:
  - type: Reference
    nodeTypes:
      - CronJob
      - DaemonSet
      - Deployment
      - Job
      - ReplicaSet
      - ReplicationController
      - StatefulSet
    filters:
      - exist: spec.template.spec.volumes
        target: spec.template.spec.volumes.$.secret.secretName
        nodeType: Secret
      - exist: spec.template.spec.volumes
        target: spec.template.spec.volumes.$.configMap.name
        nodeType: ConfigMap
      - exist: spec.template.spec.volumes
        target: spec.template.spec.volumes.$.PersistentVolumeClaim.claimName
        nodeType: PersistentVolumeClaim
      - exist: spec.template.spec.containers
        target: spec.template.spec.containers.$.envFrom.$.configMapRef.name
        nodeType: ConfigMap
      - exist: spec.template.spec.containers
        target: spec.template.spec.containers.$.envFrom.$.secretRef.name
        nodeType: Secret
  - type: Reference
    nodeTypes:
      - StatefulSet
    filters:
      - exist: spec.volumeClaimTemplates
        target: spec.volumeClaimTemplates.$.storageClassName
        nodeTypes: StorageClass
  - type: Expose
    nodeTypes:
      - Service
    filters:
      - match: spec.selector
        type:
          - CronJob
          - DaemonSet
          - Deployment
          - Job
          - ReplicaSet
          - ReplicationController
          - StatefulSet
  - type: Expose
    nodeTypes:
      - Ingress
    filters:
      - exist: spec.rules
        target: spec.rules.$.http.paths.$.backend.serviceName
        nodeType: Service
      - exist: spec.rules
        target: spec.backend.serviceName
        nodeType: Service
